persistent.go

- lockfree linked-list
- lockfree queue (coming)

motivation

- play with golang pointer and unsafe (gasp!)
- actually need this and benchmark (?), over a map+mutex, sync.map, or load/store
- other implementation were too hard to understand

caveat

- list is actually a set -> duplicate key not allowed
- can be modified to store other struct instead of int (see node struct)

commands

- go test -race -count=1 -run=ParallelAppend1 -v ./persistent
- go test -race -count=1 -run=XXX -bench=ParallelRead -benchmem -v ./persistent
- go generate ./persistent/linked_list

