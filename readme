persistent.go

- lockfree linked-list
- lockfree queue (coming)

motivation

- play with golang pointer and unsafe (gasp!)
- actually need this and benchmark (see below), over a map+mutex, sync.map, or load/store
- other implementations found here were too hard to understand

caveat

- list is actually a set -> duplicate key not allowed
- can be modified to store other struct instead of int (see node struct)

commands

- go generate ./persistent/linked_list


results

go test -count=1 -run=XXX -v -benchmem -bench=Campaign ./persistent/campaign_persistent
goos: darwin
goarch: amd64
pkg: persistent.go/persistent/campaign_persistent
BenchmarkCampaignCopyMap-16                               	    2000	   1180454 ns/op	  342338 B/op	     114 allocs/op
BenchmarkCampaignCopyList-16                              	    2000	    927673 ns/op	  720896 B/op	       4 allocs/op
BenchmarkCampaignCopyParallelMap-16                       	    5000	    221213 ns/op	  347434 B/op	     185 allocs/op
BenchmarkCampaignCopyParallelList-16                      	    5000	    301975 ns/op	  723261 B/op	      70 allocs/op
BenchmarkCampaignCopyParallelMapWithCampaignUpdate-16     	   10000	    185038 ns/op	  343291 B/op	     145 allocs/op
BenchmarkCampaignCopyParallelListWithCampaignUpdate-16    	    5000	    370579 ns/op	  723113 B/op	      68 allocs/op
PASS
ok  	persistent.go/persistent/campaign_persistent	28.545s
